{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","GET_MOVIE_API","getMovieByTitle","title","a","fetch","response","json","foundedMovie","Response","FindMovie","onMovieAdd","useState","setTitle","setMovie","isError","setIsError","isFetching","setIsFetching","onFindMovie","type","id","placeholder","classNames","value","onChange","event","target","onClick","App","setMovies","some","mov","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uCCffC,EAAgB,8CAEf,SAAeC,EAAtB,kC,4CAAO,WAA+BC,GAA/B,iBAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,GAAJ,OAAoBE,IAD3C,cACCG,EADD,gBAEsBA,EAASC,OAF/B,UAIyB,WAFxBC,EAFD,QAIYC,SAJZ,yCAKI,MALJ,gCAQED,GARF,4C,gCCUME,EAA6B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3C,EAA0BC,mBAAS,IAAnC,mBAAOT,EAAP,KAAcU,EAAd,KACA,EAA0BD,qBAA1B,mBAAOtB,EAAP,KAAcwB,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAOMC,EAAW,uCAAG,4BAAAf,EAAA,6DAClBc,GAAc,GADI,SAEShB,EAAgBC,GAFzB,cAEZK,EAFY,gBAIZU,GAAc,GAJF,uBAKZF,GAAW,GALC,OAMlBF,EAASN,GANS,2CAAH,qDAkBjB,OACE,qCACE,uBAAMjB,UAAU,aAAhB,UACE,qBAAKA,UAAU,UAAf,SACE,uBACE6B,KAAK,OACLC,GAAG,cACHC,YAAY,gCACZ/B,UAAWgC,IACT,QACA,CAAE,aAAcjC,GAASyB,IAE3BS,MAAOrB,EACPsB,SApCY,SAACC,GACrBb,EAASa,EAAMC,OAAOH,OACtBR,GAAW,SAsCL1B,GAASyB,GACT,mBAAGxB,UAAU,QAAb,oDAKF,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE6B,KAAK,SACL7B,UAAU,kBACVqC,QAAST,EAHX,4BASF,qBAAK5B,UAAU,UAAf,SACE,wBACE6B,KAAK,SACL7B,UAAU,oBACVqC,QA/CO,WACbtC,IACFqB,EAAWrB,GACXuB,EAAS,IACTC,EAAS,MACTE,GAAW,KAuCL,qCAWN,sBAAKzB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GAAS,cAAC,EAAD,CAAWA,MAAOA,IAC3B2B,GAAc,kDCrFVY,EAAgB,WAC3B,MAA4BjB,mBAAkB,IAA9C,mBAAOd,EAAP,KAAegC,EAAf,KAQA,OACE,sBAAKvC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWoB,WAZE,SAACrB,GACbQ,EAAOiC,MAAK,SAAAC,GAAG,OAAIA,EAAIhC,SAAWV,EAAMU,WAC3C8B,EAAU,GAAD,mBAAKhC,GAAL,CAAaR,cCN5B2C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c44e8bd4.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const GET_MOVIE_API = 'https://www.omdbapi.com/?apikey=dc7441d9&t=';\n\nexport async function getMovieByTitle(title: string) {\n  const response = await fetch(`${GET_MOVIE_API}${title}`);\n  const foundedMovie = await response.json();\n\n  if (foundedMovie.Response === 'False') {\n    return null;\n  }\n\n  return foundedMovie;\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport { getMovieByTitle } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  onMovieAdd: (movie: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ onMovieAdd }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>();\n  const [isError, setIsError] = useState(false);\n  const [isFetching, setIsFetching] = useState(false);\n\n  const onTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsError(false);\n  };\n\n  const onFindMovie = async () => {\n    setIsFetching(true);\n    const foundedMovie = await getMovieByTitle(title);\n\n    await setIsFetching(false);\n    await setIsError(true);\n    setMovie(foundedMovie);\n  };\n\n  const onAddMovie = () => {\n    if (movie) {\n      onMovieAdd(movie);\n      setTitle('');\n      setMovie(null);\n      setIsError(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"movie-title\"\n            placeholder=\"Enter a movie title to search\"\n            className={classNames(\n              'input',\n              { 'is-danger': !movie && isError },\n            )}\n            value={title}\n            onChange={onTitleChange}\n          />\n        </div>\n\n        {!movie && isError && (\n          <p className=\"error\">\n            Can not find a movie with such a title\n          </p>\n        )}\n\n        <div className=\"buttons\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard movie={movie} />}\n        {isFetching && <p>Loading...</p>}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const onMovieAdd = (movie: Movie) => {\n    if (!movies.some(mov => mov.imdbID === movie.imdbID)) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onMovieAdd={onMovieAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}